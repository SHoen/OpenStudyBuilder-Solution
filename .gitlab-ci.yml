# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: docker:latest

services:
  - docker:dind

stages:
- test
- build

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

build:
  tags: [ saas-linux-medium-amd64 ]
  stage: build
  script:
    - docker version
    - docker compose version
    - docker compose build
    - docker compose up -d
    - sleep 4m
    - docker container ls
    - if [ $(docker ps -f 'health=none' -f 'health=starting' -f 'health=unhealthy' -q | wc -l) -gt 0 ]; then export CONTAINERSTATUS=unhealthy; else export CONTAINERSTATUS=healthy; fi
    - docker compose down
    - if [ "$CONTAINERSTATUS" == "unhealthy" ]; then exit 1; else echo $CONTAINERSTATUS; fi
  timeout: 1 hours 00 minutes
